λ> getCode [(0.25, 'a'), (0.25, 'b'), (0.5, 'c'), (0.25, 'd'), (0.25, 'e'), (0.5, 'f'),(0.25, 'h'), (0.25, 'h'), (0.5, 'i') ]
[((8.333333333333333e-2,'a'),"000"),((8.333333333333333e-2,'b'),"0010"),((8.333333333333333e-2,'d'),"0011"),((8.333333333333333e-2,'e'),"010"),((8.333333333333333e-2,'h'),"0110"),((8.333333333333333e-2,'h'),"0111"),((0.16666666666666666,'c'),"10"),((0.16666666666666666,'f'),"110"),((0.16666666666666666,'i'),"111")]
λ> :t codeList . eTree .freqConvert
codeList . eTree .freqConvert
  :: (Ord a2, Ord a1, Fractional a1) => [(a1, a2)] -> [(a2, [Char])]
λ> :t codeList
codeList :: Tree (a1, a2) -> [(a2, [Char])]
λ> getCode [(5,'a'), (10, 'b'), (15, 'c')]
[('a',"00"),('b',"01"),('c',"1")]
λ> freqConvert [(5,'a'), (10, 'b'), (15, 'c')]
[(0.16666666666666666,'a'),(0.3333333333333333,'b'),(0.5,'c')]
λ> getCode [(5,'a'), (10, 'b'), (15, 'c'), (3,'d'), (7, 'e'), (5, 'f'), (5,'g'), (10, 'h'), (11, 'i'), (13,'j'), (8, 'k')]
[('d',"0000"),('a',"0001"),('f',"0010"),('g',"0011"),('e',"0100"),('k',"0101"),('b',"011"),('h',"100"),('i',"101"),('j',"110"),('c',"111")]
λ> freqConvert  [(5,'a'), (10, 'b'), (15, 'c'), (3,'d'), (7, 'e'), (5, 'f'), (5,'g'), (10, 'h'), (11, 'i'), (13,'j'), (8, 'k')]
[(5.434782608695652e-2,'a'),(0.10869565217391304,'b'),(0.16304347826086957,'c'),(3.260869565217391e-2,'d'),(7.608695652173914e-2,'e'),(5.434782608695652e-2,'f'),(5.434782608695652e-2,'g'),(0.10869565217391304,'h'),(0.11956521739130435,'i'),(0.14130434782608695,'j'),(8.695652173913043e-2,'k')]
